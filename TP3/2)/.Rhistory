plot
data(iris.prediction)
setwd(/home/nico/Downloads/C4.5/R8/Data/)
setwd(home/nico/Downloads/C4.5/R8/Data/)
setwd(home/nico/Downloads/C4.5/R8/Data/
)
plot(iris)
plot(4-150)
plot(4-3000)
plot(4-150)
plot(4-150, xlim=c(-1,1), ylim=c(-1,1))
plot("4-150", xlim=c(-1,1), ylim=c(-1,1))
plot(4-150)
plot(ej4_150)
plot(A$V1, A$V2, main="ej4_150", xlab="", ylab="", col=ifelse(A$V3==1, "blue", "red"))
plot(ej4_150$V1, ej4_150$V2, main="Ej 4-150", xlab="", ylab="", col=ifelse(A$V3==1, "blue", "red"))
ej4_150 -> A
ej4_150.prediction -> A
`4.150` <- read.delim("~/Documents/IAA/IAA/TP1/4-150.prediction", header=FALSE)
View(`4.150`)
plot(4.150)
View(`4.150`)
"4.150" -> A
A
plot())
plot(A)
View(`4.150`)
ej4_150 <- read.delim("~/Documents/IAA/IAA/TP1/ej4_150.prediction", header=FALSE)
View(ej4_150)
plot(ej4_150)
plot(ej4_150$V1, ej4_150$V2, main="Ej 4-150", xlab="", ylab="", col=ifelse(A$V3==1, "blue", "red"))
plot(ej4_150$V1, ej4_150$V2, main="Ej 4-150", xlab="", ylab="", col=ifelse(ej4_150$V3==1, "blue", "red"))
plot(ej4_150$V1, ej4_150$V2, main="Ej 4-150", xlab="X", ylab="Y", col=ifelse(ej4_150$V3==1, "blue", "red"))
ej4_600 <- read.delim("~/Documents/IAA/IAA/TP1/ej4_600.prediction", header=FALSE)
View(ej4_600)
plot(ej4_600$V1, ej4_600$V2, main="Ej 4-600", xlab="X", ylab="Y", col=ifelse(ej4_600$V3==1, "blue", "red"))
ej4_3000 <- read.delim("~/Documents/IAA/IAA/TP1/ej4_3000.prediction", header=FALSE)
View(ej4_3000)
plot(ej4_3000$V1, ej4_3000$V2, main="Ej 4-3000", xlab="X", ylab="Y", col=ifelse(ej4_3000$V3==1, "blue", "red"))
View(ej4_150)
ej6.1.parallel <- read.csv("~/Documents/IAA/IAA/TP1/6)/ej6-1-parallel.txt", sep="")
View(ej6.1.parallel)
ggplot(`ej6.diagonal`, aes(CValue)) +
geom_line(aes(y = `ej6.diagonal`$TestingBeforePrunningError, colour = "Before Prunning on diagonal test data")) +
geom_line(aes(y = `ej6.diagonal`$TestingAfterPrunningError, colour = "After Prunning on diagonal test data")) +
geom_line(aes(y = `ej6.parallel`$TestingBeforePrunningError, colour = "Before Prunning on parallel test data")) +
geom_line(aes(y = `ej6.parallel`$TestingAfterPrunningError, colour = "After Prunning on parallel test data")) +
geom_line(aes(y = `ej6.1.parallel`$ErrorMinimo, colour = "Minimum Error on parallel test data")) +
ggtitle("Ej 6) Error Porcentual") + xlab("C value") + ylab("Error%") + scale_x_log10()
require(ggplot2)
ggplot(`ej6.diagonal`, aes(CValue)) +
geom_line(aes(y = `ej6.diagonal`$TestingBeforePrunningError, colour = "Before Prunning on diagonal test data")) +
geom_line(aes(y = `ej6.diagonal`$TestingAfterPrunningError, colour = "After Prunning on diagonal test data")) +
geom_line(aes(y = `ej6.parallel`$TestingBeforePrunningError, colour = "Before Prunning on parallel test data")) +
geom_line(aes(y = `ej6.parallel`$TestingAfterPrunningError, colour = "After Prunning on parallel test data")) +
geom_line(aes(y = `ej6.1.parallel`$ErrorMinimo, colour = "Minimum Error on parallel test data")) +
ggtitle("Ej 6) Error Porcentual") + xlab("C value") + ylab("Error%") + scale_x_log10()
ej6.diagonal <- read.csv("~/Documents/IAA/IAA/TP1/6)/ej6-diagonal.txt", sep="")
View(ej6.diagonal)
ej6.parallel <- read.csv("~/Documents/IAA/IAA/TP1/6)/ej6-parallel.txt", sep="")
View(ej6.parallel)
ggplot(`ej6.diagonal`, aes(CValue)) +
geom_line(aes(y = `ej6.diagonal`$TestingBeforePrunningError, colour = "Before Prunning on diagonal test data")) +
geom_line(aes(y = `ej6.diagonal`$TestingAfterPrunningError, colour = "After Prunning on diagonal test data")) +
geom_line(aes(y = `ej6.parallel`$TestingBeforePrunningError, colour = "Before Prunning on parallel test data")) +
geom_line(aes(y = `ej6.parallel`$TestingAfterPrunningError, colour = "After Prunning on parallel test data")) +
geom_line(aes(y = `ej6.1.parallel`$ErrorMinimo, colour = "Minimum Error on parallel test data")) +
ggtitle("Ej 6) Error Porcentual") + xlab("C value") + ylab("Error%") + scale_x_log10()
ej6.1.parallel <- read.csv("~/Documents/IAA/IAA/TP1/6)/ej6-1-parallel.txt", sep="")
View(ej6.1.parallel)
ggplot(`ej6.diagonal`, aes(CValue)) +
geom_line(aes(y = `ej6.diagonal`$TestingBeforePrunningError, colour = "Before Prunning on diagonal test data")) +
geom_line(aes(y = `ej6.diagonal`$TestingAfterPrunningError, colour = "After Prunning on diagonal test data")) +
geom_line(aes(y = `ej6.parallel`$TestingBeforePrunningError, colour = "Before Prunning on parallel test data")) +
geom_line(aes(y = `ej6.parallel`$TestingAfterPrunningError, colour = "After Prunning on parallel test data")) +
geom_line(aes(y = `ej6.1.parallel`$ErrorMinimo, colour = "Minimum Error on parallel test data")) +
ggtitle("Ej 6) Error Porcentual") + xlab("C value") + ylab("Error%") + scale_x_log10()
ej6.1.parallel <- read.csv("~/Documents/IAA/IAA/TP1/6)/ej6-1-parallel.txt", sep="")
View(ej6.1.parallel)
ggplot(`ej6.diagonal`, aes(CValue)) +
geom_line(aes(y = `ej6.diagonal`$TestingBeforePrunningError, colour = "Before Prunning on diagonal test data")) +
geom_line(aes(y = `ej6.diagonal`$TestingAfterPrunningError, colour = "After Prunning on diagonal test data")) +
geom_line(aes(y = `ej6.parallel`$TestingBeforePrunningError, colour = "Before Prunning on parallel test data")) +
geom_line(aes(y = `ej6.parallel`$TestingAfterPrunningError, colour = "After Prunning on parallel test data")) +
geom_line(aes(y = `ej6.1.parallel`$ErrorMinimo, colour = "Minimum Error on parallel test data")) +
ggtitle("Ej 6) Error Porcentual") + xlab("C value") + ylab("Error%") + scale_x_log10()
ej6.1.diagonal <- read.csv("~/Documents/IAA/IAA/TP1/6)/ej6-1-diagonal.txt", sep="")
View(ej6.1.diagonal)
ggplot(`ej6.diagonal`, aes(CValue)) +
geom_line(aes(y = `ej6.diagonal`$TestingBeforePrunningError, colour = "Before Prunning on diagonal test data")) +
geom_line(aes(y = `ej6.diagonal`$TestingAfterPrunningError, colour = "After Prunning on diagonal test data")) +
geom_line(aes(y = `ej6.parallel`$TestingBeforePrunningError, colour = "Before Prunning on parallel test data")) +
geom_line(aes(y = `ej6.parallel`$TestingAfterPrunningError, colour = "After Prunning on parallel test data")) +
geom_line(aes(y = `ej6.1.parallel`$ErrorMinimo, colour = "Minimum Error on parallel test data")) +
geom_line(aes(y = `ej6.1.diagonal`$ErrorMinimo, colour = "Minimum Error on diagonal test data")) +
ggtitle("Ej 6) Error Porcentual") + xlab("C value") + ylab("Error%") + scale_x_log10()
ej6.1.diagonal <- read.csv("~/Documents/IAA/IAA/TP1/6)/ej6-1-diagonal.txt", sep="")
View(ej6.1.diagonal)
ggplot(`ej6.diagonal`, aes(CValue)) +
geom_line(aes(y = `ej6.diagonal`$TestingBeforePrunningError, colour = "Before Prunning on diagonal test data")) +
geom_line(aes(y = `ej6.diagonal`$TestingAfterPrunningError, colour = "After Prunning on diagonal test data")) +
geom_line(aes(y = `ej6.parallel`$TestingBeforePrunningError, colour = "Before Prunning on parallel test data")) +
geom_line(aes(y = `ej6.parallel`$TestingAfterPrunningError, colour = "After Prunning on parallel test data")) +
geom_line(aes(y = `ej6.1.parallel`$ErrorMinimo, colour = "Minimum Error on parallel test data")) +
geom_line(aes(y = `ej6.1.diagonal`$ErrorMinimo, colour = "Minimum Error on diagonal test data")) +
ggtitle("Ej 6) Error Porcentual") + xlab("C value") + ylab("Error%") + scale_x_log10()
ggplot(`ej6.diagonal`, aes(CValue)) +
geom_line(aes(y = `ej6.diagonal`$TestingBeforePrunningError, colour = "Before Prunning on diagonal test data")) +
geom_line(aes(y = `ej6.diagonal`$TestingAfterPrunningError, colour = "After Prunning on diagonal test data")) +
geom_line(aes(y = `ej6.parallel`$TestingBeforePrunningError, colour = "Before Prunning on parallel test data")) +
geom_line(aes(y = `ej6.parallel`$TestingAfterPrunningError, colour = "After Prunning on parallel test data")) +
geom_line(aes(y = `ej6.1.parallel`$ErrorMinimo, colour = "Minimum Error on parallel test data")) +
geom_line(aes(y = `ej6.1.diagonal`$ErrorMinimo, colour = "Minimum Error on diagonal test data")) +
ggtitle("Ej 6) Error Porcentual") + xlab("C value") + ylab("Error%") + scale_x_log10() + theme(legend.position="bottom")
ggplot(`ej6.diagonal`, aes(CValue)) +
geom_line(aes(y = `ej6.diagonal`$TestingBeforePrunningError, colour = "Before Prunning on diagonal test data")) +
geom_line(aes(y = `ej6.diagonal`$TestingAfterPrunningError, colour = "After Prunning on diagonal test data")) +
geom_line(aes(y = `ej6.parallel`$TestingBeforePrunningError, colour = "Before Prunning on parallel test data")) +
geom_line(aes(y = `ej6.parallel`$TestingAfterPrunningError, colour = "After Prunning on parallel test data")) +
geom_line(aes(y = `ej6.1.parallel`$ErrorMinimo, colour = "Minimum Error on parallel test data")) +
geom_line(aes(y = `ej6.1.diagonal`$ErrorMinimo, colour = "Minimum Error on diagonal test data")) +
ggtitle("Ej 6) Error Porcentual") + xlab("C value") + ylab("Error%") + theme(legend.position="bottom")
ggplot(`ej6.diagonal`, aes(CValue)) +
geom_line(aes(y = `ej6.diagonal`$TestingBeforePrunningError, colour = "Before Prunning on diagonal test data")) +
geom_line(aes(y = `ej6.diagonal`$TestingAfterPrunningError, colour = "After Prunning on diagonal test data")) +
geom_line(aes(y = `ej6.parallel`$TestingBeforePrunningError, colour = "Before Prunning on parallel test data")) +
geom_line(aes(y = `ej6.parallel`$TestingAfterPrunningError, colour = "After Prunning on parallel test data")) +
geom_line(aes(y = `ej6.1.parallel`$ErrorMinimo, colour = "Minimum Error on parallel test data")) +
geom_line(aes(y = `ej6.1.diagonal`$ErrorMinimo, colour = "Minimum Error on diagonal test data")) +
ggtitle("Ej 6) Error Porcentual") + xlab("C value") + ylab("Error%")
ej6.1.diagonal <- read.csv("~/Documents/IAA/IAA/TP1/6)/ej6-1-diagonal.txt", sep="")
View(ej6.1.diagonal)
ej6.1parallel <- read.csv("~/Documents/IAA/IAA/TP1/6)/ej6-1parallel.txt", sep="")
View(ej6.1parallel)
ggplot(`ej6.diagonal`, aes(CValue)) +
geom_line(aes(y = `ej6.diagonal`$TestingBeforePrunningError, colour = "Before Prunning on diagonal test data")) +
geom_line(aes(y = `ej6.diagonal`$TestingAfterPrunningError, colour = "After Prunning on diagonal test data")) +
geom_line(aes(y = `ej6.parallel`$TestingBeforePrunningError, colour = "Before Prunning on parallel test data")) +
geom_line(aes(y = `ej6.parallel`$TestingAfterPrunningError, colour = "After Prunning on parallel test data")) +
geom_line(aes(y = `ej6.1.parallel`$ErrorMinimo, colour = "Minimum Error on parallel test data")) +
geom_line(aes(y = `ej6.1.diagonal`$ErrorMinimo, colour = "Minimum Error on diagonal test data")) +
ggtitle("Ej 6) Error Porcentual") + xlab("C value") + ylab("Error%") + theme(legend.position="bottom")
load("/home/nico/Documents/IAA/TP1/Rworkspace.RData")
xor <- read.csv("~/Documents/IAA/TP1/8)/xor.data", header=FALSE)
View(xor)
plot(xor$V1, xor$V2,main="Xor", xlab="",ylab="",col=ifelse(xor$V7==1, "blue", "red))
)
))
end
quit
plot()
require(ggplot2)
xor <- read.csv("~/Documents/IAA/TP1/8)/xor.data", header=FALSE)
View(xor)
plot(xor$V1, xor$V2,main="Xor", xlab="",ylab="",col=ifelse(xor$V7==1, "blue", "red))
require(ggplot2)
ggplot(`xor`, aes(xor$V1)) + geom_point()
ggplot(`paralelo.ITER=80000,.ETA=0.01,.u=0.9,.NERROR=200`, aes(2**as.numeric(row.names(`paralelo.ITER=80000,.ETA=0.01,.u=0.9,.NERROR=200`)))) +
geom_line(aes(y = `paralelo.ITER=80000,.ETA=0.01,.u=0.9,.NERROR=200`$V5, colour = "Error de validacion")) +
geom_line(aes(y = `paralelo.ITER=80000,.ETA=0.01,.u=0.9,.NERROR=200`$V6, colour = "Error de test")) +
geom_line(aes(y = `paralelo.ITER=80000,.ETA=0.01,.u=0.9,.NERROR=200`$V7, colour = "Error de discreto")) +
theme(legend.position="bottom") + ggtitle("Diagonal: ITER=40000, ETA=0.01, u=0.75, NERROR=200") + xlab("Dimensiones") + ylab("Classification Error")
`paralelo.ITER=80000,.ETA=0.01,.u=0.9,.NERROR=200` <- read.table("~/Documents/IAA/TP2/6)/paralelo-ITER=80000,.ETA=0.01,.u=0.9,.NERROR=200.txt", quote="\"", comment.char="")
View(`paralelo.ITER=80000,.ETA=0.01,.u=0.9,.NERROR=200`)
require(ggplot2)
`paralelo.ITER=80000,.ETA=0.01,.u=0.9,.NERROR=200` <- read.table("~/Documents/IAA/TP2/6)/paralelo-ITER=80000,.ETA=0.01,.u=0.9,.NERROR=200.txt", quote="\"", comment.char="")
View(`paralelo.ITER=80000,.ETA=0.01,.u=0.9,.NERROR=200`)
ggplot(`paralelo.ITER=80000,.ETA=0.01,.u=0.9,.NERROR=200`, aes(2**as.numeric(row.names(`paralelo.ITER=80000,.ETA=0.01,.u=0.9,.NERROR=200`)))) +
geom_line(aes(y = `paralelo.ITER=80000,.ETA=0.01,.u=0.9,.NERROR=200`$V5, colour = "Error de validacion")) +
geom_line(aes(y = `paralelo.ITER=80000,.ETA=0.01,.u=0.9,.NERROR=200`$V6, colour = "Error de test")) +
geom_line(aes(y = `paralelo.ITER=80000,.ETA=0.01,.u=0.9,.NERROR=200`$V7, colour = "Error de discreto")) +
theme(legend.position="bottom") + ggtitle("Diagonal: ITER=40000, ETA=0.01, u=0.75, NERROR=200") + xlab("Dimensiones") + ylab("Classification Error")
`ssp.gamma=10.5` <- read.delim("~/Documents/IAA/TP2/5)/ssp-gamma=10-5.mse", header=FALSE)
View(`ssp.gamma=10.5`)
ggplot(`ssp.gamma=10.5`, aes(as.numeric(row.names(`ssp.gamma=10.5`))*200)) +
geom_line(aes(y = `ssp.gamma=10.5`$V3*200, colour = "Termino de penalizacion")) +
geom_line(aes(y = `ssp.gamma=10.5`$V5, colour = "Error de training")) +
geom_line(aes(y = `ssp.gamma=10.5`$V7, colour = "Error de test")) +
scale_y_continuous(name = "Error", sec.axis = sec_axis(~./200, name="weight decay term")) +
theme(legend.position="bottom") + ggtitle("Sunspots problem: gamma=10^-5") + xlab("Generaciones")
require(ggplot2)
ggplot(`ssp.gamma=10.5`, aes(as.numeric(row.names(`ssp.gamma=10.5`))*200)) +
geom_line(aes(y = `ssp.gamma=10.5`$V3*200, colour = "Termino de penalizacion")) +
geom_line(aes(y = `ssp.gamma=10.5`$V5, colour = "Error de training")) +
geom_line(aes(y = `ssp.gamma=10.5`$V7, colour = "Error de test")) +
scale_y_continuous(name = "Error", sec.axis = sec_axis(~./200, name="weight decay term")) +
theme(legend.position="bottom") + ggtitle("Sunspots problem: gamma=10^-5") + xlab("Generaciones")
load("/home/nico/Documents/IAA/TP2/6)/6).RData")
setwd("~/Documents/IAA/TP3/2)")
arboles.diagonal <- read.csv("~/Documents/IAA/TP3/2)/arboles-diagonal.txt", sep="")
View(arboles.diagonal)
arboles.parallel <- read.csv("~/Documents/IAA/TP3/2)/arboles-parallel.txt", sep="")
View(arboles.parallel)
bayes.diagonal <- read.csv("~/Documents/IAA/TP3/2)/bayes-diagonal.txt", sep="")
View(bayes.diagonal)
bayes.parallel <- read.csv("~/Documents/IAA/TP3/2)/bayes-parallel.txt", sep="")
View(bayes.parallel)
neuralnetworks.diagonal <- read.csv("~/Documents/IAA/TP3/2)/neuralnetworks-diagonal.txt", sep="")
View(neuralnetworks.diagonal)
neuralnetworks.parallel <- read.csv("~/Documents/IAA/TP3/2)/neuralnetworks-parallel.txt", sep="")
View(neuralnetworks.parallel)
save.image("~/Documents/IAA/TP3/2)/2).RData")
require(ggplot2)
ggplot(`ej7.parallel`, aes(2**as.numeric(row.names(`ej7.parallel`)))) +
geom_line(aes(y = `ej7.parallel`$TrainingAfterPrunningError, colour = "Tree Training Error")) +
geom_line(aes(y = `ej7.parallel`$TestingAfterPrunningError, colour = "Tree Testing Error")) +
geom_line(aes(y = `paralelo.ITER=4000,.ETA=0.01,.u=0.3,.NERROR=1`$TestDiscreto, colour = "Neural Network Test Error Minimo")) +
geom_line(aes(y = `paralelo.ITER=4000,.ETA=0.01,.u=0.3,.NERROR=1`$TrainingError*100, colour = "Neural Network Training Error")) +
theme(legend.position="bottom") + ggtitle("Problema Paralelo") + xlab("Dimensiones") + ylab("Classification Error")
ggplot(`arboles.parallel`, aes(2**as.numeric(row.names(`arboles.parallel`)))) +
geom_line(aes(y = `arboles.parallel`$TrainingAfterPrunningError, colour = "Tree Training Error")) +
geom_line(aes(y = `arboles.parallel`$TestingAfterPrunningError, colour = "Tree Testing Error")) +
geom_line(aes(y = `neuralnetworks-parallel`$TestDiscreto, colour = "Neural Network Test Error Minimo")) +
geom_line(aes(y = `neuralnetworks-parallel`$TrainingError*100, colour = "Neural Network Training Error")) +
geom_line(aes(y = `bayes-parallel`$TestDiscreto, colour = "Neural Network Test Error Minimo")) +
geom_line(aes(y = `bayes-parallel`$TrainingError, colour = "Neural Network Training Error")) +
theme(legend.position="bottom") + ggtitle("Problema Paralelo") + xlab("Dimensiones") + ylab("Classification Error")
ggplot(`arboles.parallel`, aes(2**as.numeric(row.names(`arboles.parallel`)))) +
geom_line(aes(y = `arboles.parallel`$TrainingAfterPrunningError, colour = "Tree Training Error")) +
geom_line(aes(y = `arboles.parallel`$TestingAfterPrunningError, colour = "Tree Testing Error")) +
geom_line(aes(y = `neuralnetworks.parallel`$TestDiscreto, colour = "Neural Network Test Error Minimo")) +
geom_line(aes(y = `neuralnetworks.parallel`$TrainingError*100, colour = "Neural Network Training Error")) +
geom_line(aes(y = `bayes.parallel`$TestDiscreto, colour = "Neural Network Test Error Minimo")) +
geom_line(aes(y = `bayes.parallel`$TrainingError, colour = "Neural Network Training Error")) +
theme(legend.position="bottom") + ggtitle("Problema Paralelo") + xlab("Dimensiones") + ylab("Classification Error")
ggplot(`arboles.parallel`, aes(2**as.numeric(row.names(`arboles.parallel`)))) +
geom_line(aes(y = `arboles.parallel`$TrainingAfterPrunningError, colour = "Tree Training Error")) +
geom_line(aes(y = `arboles.parallel`$TestingAfterPrunningError, colour = "Tree Testing Error")) +
geom_line(aes(y = `neuralnetworks.parallel`$TestDiscreto, colour = "Neural Network Test Error Minimo")) +
geom_line(aes(y = `neuralnetworks.parallel`$TrainingError*100, colour = "Neural Network Training Error")) +
geom_line(aes(y = `bayes.parallel`$ErrorTest, colour = "Bayes Test Error")) +
geom_line(aes(y = `bayes.parallel`$ErrorEntrenamiento, colour = "Bayes Training Error")) +
theme(legend.position="bottom") + ggtitle("Problema Paralelo") + xlab("Dimensiones") + ylab("Classification Error")
ggplot(`arboles.diagonal`, aes(2**as.numeric(row.names(`arboles.diagonal`)))) +
geom_line(aes(y = `arboles.diagonal`$TrainingAfterPrunningError, colour = "Tree Training Error")) +
geom_line(aes(y = `arboles.diagonal`$TestingAfterPrunningError, colour = "Tree Testing Error")) +
geom_line(aes(y = `neuralnetworks.diagonal`$TestDiscreto, colour = "Neural Network Test Error Minimo")) +
geom_line(aes(y = `neuralnetworks.diagonal`$TrainingError*100, colour = "Neural Network Training Error")) +
geom_line(aes(y = `bayes.diagonal`$ErrorTest, colour = "Bayes Test Error")) +
geom_line(aes(y = `bayes.diagonal`$ErrorEntrenamiento, colour = "Bayes Training Error")) +
theme(legend.position="bottom") + ggtitle("Problema Paralelo") + xlab("Dimensiones") + ylab("Classification Error")
bayes.diagonal3 <- read.csv("~/Documents/IAA/TP3/2)/bayes-diagonal3.txt", sep="")
View(bayes.diagonal3)
bayes.parallel3 <- read.csv("~/Documents/IAA/TP3/2)/bayes-parallel3.txt", sep="")
View(bayes.parallel3)
require(ggplot2)
ggplot(`arboles.parallel`, aes(2**as.numeric(row.names(`arboles.parallel`)))) +
geom_line(aes(y = `arboles.parallel`$TrainingAfterPrunningError, colour = "Tree Training Error")) +
geom_line(aes(y = `arboles.parallel`$TestingAfterPrunningError, colour = "Tree Testing Error")) +
geom_line(aes(y = `neuralnetworks.parallel`$TestDiscreto, colour = "Neural Network Test Error Minimo")) +
geom_line(aes(y = `neuralnetworks.parallel`$TrainingError*100, colour = "Neural Network Training Error")) +
geom_line(aes(y = `bayes.parallel`$ErrorTest, colour = "Bayes Test Error")) +
geom_line(aes(y = `bayes.parallel`$ErrorEntrenamiento, colour = "Bayes Training Error")) +
theme(legend.position="bottom") + ggtitle("Problema Paralelo") + xlab("Dimensiones") + ylab("Classification Error")
bayes.diagonal <- read.csv("~/Documents/IAA/TP3/2)/bayes-diagonal.txt", sep="")
View(bayes.diagonal)
bayes.parallel <- read.csv("~/Documents/IAA/TP3/2)/bayes-parallel.txt", sep="")
View(bayes.parallel)
ggplot(`arboles.parallel`, aes(2**as.numeric(row.names(`arboles.parallel`)))) +
geom_line(aes(y = `arboles.parallel`$TrainingAfterPrunningError, colour = "Tree Training Error")) +
geom_line(aes(y = `arboles.parallel`$TestingAfterPrunningError, colour = "Tree Testing Error")) +
geom_line(aes(y = `neuralnetworks.parallel`$TestDiscreto, colour = "Neural Network Test Error Minimo")) +
geom_line(aes(y = `neuralnetworks.parallel`$TrainingError*100, colour = "Neural Network Training Error")) +
geom_line(aes(y = `bayes.parallel`$ErrorTest, colour = "Bayes Test Error")) +
geom_line(aes(y = `bayes.parallel`$ErrorEntrenamiento, colour = "Bayes Training Error")) +
theme(legend.position="bottom") + ggtitle("Problema Paralelo") + xlab("Dimensiones") + ylab("Classification Error")
bayes.diagonal <- read.csv("~/Documents/IAA/TP3/2)/bayes-diagonal.txt", sep="")
View(bayes.diagonal)
ggplot(`arboles.diagonal`, aes(2**as.numeric(row.names(`arboles.diagonal`)))) +
geom_line(aes(y = `arboles.diagonal`$TrainingAfterPrunningError, colour = "Tree Training Error")) +
geom_line(aes(y = `arboles.diagonal`$TestingAfterPrunningError, colour = "Tree Testing Error")) +
geom_line(aes(y = `neuralnetworks.diagonal`$TestDiscreto, colour = "Neural Network Test Error Minimo")) +
geom_line(aes(y = `neuralnetworks.diagonal`$TrainingError*100, colour = "Neural Network Training Error")) +
geom_line(aes(y = `bayes.diagonal`$ErrorTest, colour = "Bayes Test Error")) +
geom_line(aes(y = `bayes.diagonal`$ErrorEntrenamiento, colour = "Bayes Training Error")) +
theme(legend.position="bottom") + ggtitle("Problema Diagonal") + xlab("Dimensiones") + ylab("Classification Error")
